---

#
# Set fish as default shell
#

- name: Get location of fish
  command: which fish
  register: fish_location

- name: Check if fish is already in /etc/shells
  shell: cat /etc/shells | grep -Fcx {{ fish_location.stdout }} || true
  register: fish_in_etc_shells
  failed_when: false # never fails, non-zero exit code is allowed

- name: Add fish to /etc/shells
  shell: echo "{{ fish_location.stdout }}" | sudo tee -a /etc/shells
  when: fish_in_etc_shells.stdout == "0"

- name: Check if current shell is fish
  shell: dscl . -read /Users/$(whoami) UserShell
  register: configured_shell

- name: Install fish as current shell
  command: chsh -s {{ fish_location.stdout }}
  when: 'configured_shell.stdout.endswith("fish") == false'

#
# Configure fish shell
#

- name: Set permanent variables
  command: fish -c "set -Ux {{ item.name | default(item) }}"
  loop: "{{ fish_environment_variables }}"

- name: Install fish settings
  file:
    state: link
    src: "{{ role_path }}/files/config.fish"
    dest: "~/.config/fish/config.fish"
    force: true

#
# Configure fisher package manager
#

- name: Check if fisher package manager is installed
  command: fish -c "fisher"
  register: fisher_installed
  failed_when: false # never fails, non-zero exit code is allowed

- name: Download fisher package manager
  get_url:
    url: "https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish"
    dest: "/tmp/tmp"
  when: fisher_installed.rc != 0

- name: Ad bang to fisher package manager
  shell: echo "#!/usr/bin/env fish\n\n" | cat - /tmp/tmp > /tmp/fisher.fish
  when: fisher_installed.rc != 0

- name: Install fisher via fisher
  shell: echo "fisher install jorgebucaran/fisher" >> /tmp/fisher.fish
  when: fisher_installed.rc != 0

- name: Run fisher package manager
  script: /tmp/fisher.fish
  when: fisher_installed.rc != 0

- name: List fisher extensions
  shell: fish -c "fisher list"
  register: installed_fisher_packages

- name: Update installed fisher extensions
  shell: fish -c "fisher update {{ item.name | default(item) }}"
  when: item in fisher_packages
  loop: "{{ installed_fisher_packages.stdout_lines }}"

- name: Install missing fisher extensions
  shell: fish -c "fisher install {{ item.name | default(item) }}"
  when: item not in installed_fisher_packages.stdout_lines
  loop: "{{ fisher_packages }}"

- name: Uninstall not listed fisher extensions
  shell: fish -c "fisher remove {{ item.name | default(item) }}"
  when: item not in fisher_packages
  loop: "{{ installed_fisher_packages.stdout_lines }}"
